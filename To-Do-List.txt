import React, { useState } from 'react';

function App() {
  const [tasks, setTasks] = useState([]);
  const [choice, setChoice] = useState('');

  const displayTasks = () => {
    if (tasks.length === 0) {
      return <p>Your to-do list is empty.</p>;
    } else {
      return (
        <div>
          <h2>To-Do List:</h2>
          <ul>
            {tasks.map((task, index) => (
              <li key={index}>
                {task.task} ({task.completed ? 'Done' : 'Not Done'})
              </li>
            ))}
          </ul>
        </div>
      );
    }
  };

  const addTask = (taskName) => {
    const newTask = { task: taskName, completed: false };
    setTasks([...tasks, newTask]);
  };

  const markCompleted = (taskNumber) => {
    if (taskNumber >= 1 && taskNumber <= tasks.length) {
      const updatedTasks = [...tasks];
      updatedTasks[taskNumber - 1].completed = true;
      setTasks(updatedTasks);
    } else {
      alert('Invalid task number. Please enter a valid task number.');
    }
  };

  const removeTask = (taskNumber) => {
    if (taskNumber >= 1 && taskNumber <= tasks.length) {
      const updatedTasks = [...tasks];
      updatedTasks.splice(taskNumber - 1, 1);
      setTasks(updatedTasks);
    } else {
      alert('Invalid task number. Please enter a valid task number.');
    }
  };

  const handleChoice = (event) => {
    setChoice(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    switch (choice) {
      case '1':
        displayTasks();
        break;
      case '2':
        const taskName = prompt('Enter the task:');
        addTask(taskName);
        break;
      case '3':
        displayTasks();
        const taskNumber = parseInt(prompt('Enter the task number to mark as completed:'));
        markCompleted(taskNumber);
        break;
      case '4':
        displayTasks();
        const removeTaskNumber = parseInt(prompt('Enter the task number to remove:'));
        removeTask(removeTaskNumber);
        break;
      case '5':
        window.location.reload();
        break;
      default:
        alert('Invalid choice. Please enter a valid option.');
    }
  };

  return (
    <div>
      <h1>To-Do List App</h1>
      <form onSubmit={handleSubmit}>
        <label>
          Choose an option:
          <select value={choice} onChange={handleChoice}>
            <option value="1">Display to-do list</option>
            <option value="2">Add a task</option>
            <option value="3">Mark a task as completed</option>
            <option value="4">Remove a task</option>
            <option value="5">Quit</option>
          </select>
        </label>
        <button type="submit">Submit</button>
      </form>
      {displayTasks()}
    </div>
  );
}

export default App;
